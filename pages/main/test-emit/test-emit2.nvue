<template>
	<view class="zy-content">
		<button type="primary" @click="click1" style="margin-top: 10px;">一般 $emit</button>
		<button type="primary" @click="click2" style="margin-top: 10px;">一次性 $emit</button>
		<button type="primary" @click="click3" style="margin-top: 10px;">nvue => js中调用 $emit</button>
		<button type="primary" @click="click4" style="margin-top: 10px;">nvue => 退出登录</button>
		<button type="primary" @click="click5" style="margin-top: 10px;">nvue => 触发App.vue中的退出登录</button>
	</view>
</template>

<script>
	import {
		req,
		api,
		navi,
		img,
		ui 
	} from '@/js/zykit.js'
	
	import {
		mapState,
		mapMutations,
		mapGetters,
		mapActions
	} from 'vuex'
	
	import test from './test.js'
	
	
	export default {
		methods: {
			click1() {
				uni.$emit('normal_emit', {"value": "hello"});
			},
			click2() {
				uni.$emit('once_emit', {"value": "once"});
			},
			click3() {
				test.emit();
			},
			click4() {
				test.logout();
				// this.xact_logout();
			},
			click5() {
				test.logout_appvue();
				// this.xact_logout();
			},
			...mapActions(['xact_logout'])
			
		},
		onLoad() {
			
			
			
			// 需要注意的是必须在页面结束的时候移除监听 否则会出现监听出现多次调用的问题
			uni.$on('normal_emit', function(dic) {
				ui.showToast(dic.value);
			})
			
			// 该监听只会调用一次
			uni.$once('once_emit', function(dic) {
				ui.showToast(dic.value);
			})
			
			uni.$on('normal_emit_js', function(dic) {
				ui.showToast(dic.value);
			})

			// 注意这里要用箭头函数 如果是一般函数需要 let self = this; self.xact_logout();
			uni.$once('emit_logout', (dic) => {
				console.log("退出登录");
				this.xact_logout();
			})
		},
		onUnload() {
			console.log("页面释放");
			uni.$off('normal_emit');
			uni.$off('normal_emit_js');
		}
	}
</script>

<style>
</style>
